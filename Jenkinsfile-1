pipeline {
    agent any

    stages {
        stage('Git Checkout') {
            steps {

				checkout([$class: 'GitSCM',
					branches: [
						[name: "${BRANCH}"]
					],
					doGenerateSubmoduleConfigurations: false,
					extensions: [],
					gitTool: 'Default',
					submoduleCfg: [],
					userRemoteConfigs: [
						[credentialsId: 'Git-Auth',
							url: 'git@github.com:Narendrakaduru/${App_Name}.git'

						]
					]
				])
            }
        }
        stage('Maven Build'){
            steps{
                sh '''
                mvn clean install
                cd target
                mv ${App_Name}-0.0.1-SNAPSHOT.jar ${App_Name}.jar
                mv ${App_Name}.jar /app/${App_Name}/staging
                '''
            }
        }
        stage('Shell Deploy'){
            steps{
                sh '''
                    echo "########################## Check if ${App_Name} is running or not ##########"
                    ps -ef | grep ${App_Name}.jar
                    echo "########################## Kill running ${App_Name} ########################"
                    if pgrep -f "$App_Name" > /dev/null; then
                      echo "The process $App_Name is running. Attempting to kill it."
                      pkill -f ${App_Name}.jar
                      echo "The process $App_Name has been terminated."
                    else
                      echo "The process $App_Name is not running."
                    fi
                    sleep 5s
                    echo "########################## Check if ${App_Name} is running or not ##########"
                    ps -ef | grep ${App_Name}.jar
                    echo "########################## Take Backup of old jar ########################"
                    mv /app/${App_Name}/release/${App_Name}.jar /app/${App_Name}/backup
                    echo "Backup completed successfully"
                    echo "########################## Move to jar to Release ########################"
                    mv /app/${App_Name}/staging/${App_Name}.jar /app/${App_Name}/release
                    echo "JAR moved to release"
                    echo "########################## Deploy ${App_Name} ##############################"
                    java -jar /app/${App_Name}/release/${App_Name}.jar &
                    echo "Successfully deployed ${App_Name}"
                    echo "########################## Check if ${App_Name} is running or not ##########"
                    ps -ef | grep ${App_Name}.jar
                '''
            }
        }
    }
    tools{
        maven 'M2_HOME'
    }
}
